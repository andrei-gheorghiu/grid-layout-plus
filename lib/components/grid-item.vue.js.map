{"version":3,"file":"grid-item.vue.js","sources":["../../src/components/grid-item.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport {\r\n  computed,\r\n  inject,\r\n  onBeforeMount,\r\n  onBeforeUnmount,\r\n  onMounted,\r\n  reactive,\r\n  ref,\r\n  toRef,\r\n  watch,\r\n  watchEffect\r\n} from 'vue'\r\n\r\nimport { isNull, nextTickOnce, throttle } from '@vexip-ui/utils'\r\nimport {\r\n  EMITTER_KEY,\r\n  LAYOUT_KEY,\r\n  setTopLeft,\r\n  setTopRight,\r\n  setTransform,\r\n  setTransformRtl,\r\n  useNameHelper\r\n} from '../helpers/common'\r\nimport { createCoreData, getControlPosition } from '../helpers/draggable'\r\nimport { getColsFromBreakpoint } from '../helpers/responsive'\r\nimport { getDocumentDir } from '../helpers/dom'\r\n\r\nimport interact from 'interactjs'\r\n\r\nconst props = defineProps({\r\n  isDraggable: {\r\n    type: Boolean,\r\n    default: null\r\n  },\r\n  isResizable: {\r\n    type: Boolean,\r\n    default: null\r\n  },\r\n  isBounded: {\r\n    type: Boolean,\r\n    default: null\r\n  },\r\n  static: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  minH: {\r\n    type: Number,\r\n    default: 1\r\n  },\r\n  minW: {\r\n    type: Number,\r\n    default: 1\r\n  },\r\n  maxH: {\r\n    type: Number,\r\n    default: Infinity\r\n  },\r\n  maxW: {\r\n    type: Number,\r\n    default: Infinity\r\n  },\r\n  x: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  y: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  w: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  h: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  i: {\r\n    type: [Number, String],\r\n    required: true\r\n  },\r\n  dragIgnoreFrom: {\r\n    type: String,\r\n    default: 'a, button'\r\n  },\r\n  dragAllowFrom: {\r\n    type: String,\r\n    default: null\r\n  },\r\n  resizeIgnoreFrom: {\r\n    type: String,\r\n    default: 'a, button'\r\n  },\r\n  preserveAspectRatio: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  dragOption: {\r\n    type: Object,\r\n    default: () => ({})\r\n  },\r\n  resizeOption: {\r\n    type: Object,\r\n    default: () => ({})\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['container-resized', 'resize', 'resized', 'move', 'moved'])\r\n\r\nconst layout = inject(LAYOUT_KEY)\r\nconst emitter = inject(EMITTER_KEY)!\r\n\r\nif (!layout) {\r\n  throw new Error('[grid-layout-plus]: missing layout store, GridItem must under a GridLayout.')\r\n}\r\n\r\nconst interactObj = ref<InstanceType<typeof import('@interactjs/types').Interactable> | null>(null)\r\n\r\nconst state = reactive({\r\n  cols: 1,\r\n  containerWidth: 100,\r\n  rowHeight: 30,\r\n  margin: [10, 10],\r\n  maxRows: Infinity,\r\n  draggable: null as boolean | null,\r\n  resizable: null as boolean | null,\r\n  bounded: null as boolean | null,\r\n  transformScale: 1,\r\n  useCssTransforms: true,\r\n  useStyleCursor: true,\r\n\r\n  isDragging: false,\r\n  dragging: {\r\n    top: -1,\r\n    left: -1\r\n  },\r\n  isResizing: false,\r\n  resizing: {\r\n    width: -1,\r\n    height: -1\r\n  },\r\n  style: {} as Record<string, string>,\r\n  rtl: false\r\n})\r\n\r\nlet dragEventSet = false\r\nlet resizeEventSet = false\r\n\r\nlet lastX = NaN\r\nlet lastY = NaN\r\nlet lastW = NaN\r\nlet lastH = NaN\r\n\r\nlet previousW = -1\r\nlet previousH = -1\r\nlet previousX = -1\r\nlet previousY = -1\r\n\r\nlet innerX = props.x\r\nlet innerY = props.y\r\nlet innerW = props.w\r\nlet innerH = props.h\r\n\r\nconst wrapper = ref<HTMLElement>()\r\n\r\nconst instance = reactive({\r\n  i: toRef(props, 'i'),\r\n  state,\r\n  wrapper,\r\n  calcXY\r\n})\r\n\r\nfunction updateWidthHandler(width: number) {\r\n  updateWidth(width)\r\n}\r\n\r\nfunction compactHandler() {\r\n  compact()\r\n}\r\n\r\nfunction setDraggableHandler(isDraggable: boolean) {\r\n  if (isNull(props.isDraggable)) {\r\n    state.draggable = isDraggable\r\n  }\r\n}\r\n\r\nfunction setResizableHandler(isResizable: boolean) {\r\n  if (isNull(props.isResizable)) {\r\n    state.resizable = isResizable\r\n  }\r\n}\r\n\r\nfunction setBoundedHandler(isBounded: boolean) {\r\n  if (isNull(props.isBounded)) {\r\n    state.bounded = isBounded\r\n  }\r\n}\r\n\r\nfunction setTransformScaleHandler(transformScale: number) {\r\n  state.transformScale = transformScale\r\n}\r\n\r\nfunction setRowHeightHandler(rowHeight: number) {\r\n  state.rowHeight = rowHeight\r\n}\r\n\r\nfunction setMaxRowsHandler(maxRows: number) {\r\n  state.maxRows = maxRows\r\n}\r\n\r\nfunction directionchangeHandler() {\r\n  state.rtl = getDocumentDir() === 'rtl'\r\n  compact()\r\n}\r\n\r\nfunction setColNum(colNum: number) {\r\n  state.cols = Math.floor(colNum)\r\n}\r\n\r\nlayout.increaseItem(instance)\r\n\r\nonBeforeMount(() => {\r\n  state.rtl = getDocumentDir() === 'rtl'\r\n})\r\n\r\nonMounted(() => {\r\n  if (layout.responsive && layout.lastBreakpoint) {\r\n    state.cols = getColsFromBreakpoint(layout.lastBreakpoint, layout.cols)\r\n  } else {\r\n    state.cols = layout.colNum\r\n  }\r\n  state.rowHeight = layout.rowHeight\r\n  state.containerWidth = layout.width !== null ? layout.width : 100\r\n  state.margin = layout.margin !== undefined ? layout.margin.map(Number) : [10, 10]\r\n  state.maxRows = layout.maxRows\r\n\r\n  if (isNull(props.isDraggable)) {\r\n    state.draggable = layout.isDraggable\r\n  } else {\r\n    state.draggable = props.isDraggable\r\n  }\r\n  if (isNull(props.isResizable)) {\r\n    state.resizable = layout.isResizable\r\n  } else {\r\n    state.resizable = props.isResizable\r\n  }\r\n  if (isNull(props.isBounded)) {\r\n    state.bounded = layout.isBounded\r\n  } else {\r\n    state.bounded = props.isBounded\r\n  }\r\n  state.transformScale = layout.transformScale\r\n  state.useCssTransforms = layout.useCssTransforms\r\n  state.useStyleCursor = layout.useStyleCursor\r\n\r\n  watchEffect(() => {\r\n    innerX = props.x\r\n    innerY = props.y\r\n    innerH = props.h\r\n    innerW = props.w\r\n    nextTickOnce(createStyle)\r\n  })\r\n\r\n  emitter.on('updateWidth', updateWidthHandler)\r\n  emitter.on('compact', compactHandler)\r\n  emitter.on('setDraggable', setDraggableHandler)\r\n  emitter.on('setResizable', setResizableHandler)\r\n  emitter.on('setBounded', setBoundedHandler)\r\n  emitter.on('setTransformScale', setTransformScaleHandler)\r\n  emitter.on('setRowHeight', setRowHeightHandler)\r\n  emitter.on('setMaxRows', setMaxRowsHandler)\r\n  emitter.on('directionchange', directionchangeHandler)\r\n  emitter.on('setColNum', setColNum)\r\n})\r\n\r\nonBeforeUnmount(() => {\r\n  emitter.off('updateWidth', updateWidthHandler)\r\n  emitter.off('compact', compactHandler)\r\n  emitter.off('setDraggable', setDraggableHandler)\r\n  emitter.off('setResizable', setResizableHandler)\r\n  emitter.off('setBounded', setBoundedHandler)\r\n  emitter.off('setTransformScale', setTransformScaleHandler)\r\n  emitter.off('setRowHeight', setRowHeightHandler)\r\n  emitter.off('setMaxRows', setMaxRowsHandler)\r\n  emitter.off('directionchange', directionchangeHandler)\r\n  emitter.off('setColNum', setColNum)\r\n\r\n  if (interactObj.value) {\r\n    interactObj.value.unset() // destroy interact intance\r\n    interactObj.value = null\r\n  }\r\n\r\n  layout.decreaseItem(instance)\r\n})\r\n\r\ndefineExpose({ state, wrapper })\r\n\r\nconst isAndroid =\r\n  typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase().includes('android') : false\r\n\r\nconst resizableAndNotStatic = computed(() => state.resizable && !props.static)\r\nconst renderRtl = computed(() => (layout.isMirrored ? !state.rtl : state.rtl))\r\nconst draggableOrResizableAndNotStatic = computed(() => {\r\n  return (state.draggable || state.resizable) && !props.static\r\n})\r\n\r\nconst nh = useNameHelper('item')\r\n\r\nconst className = computed(() => {\r\n  return {\r\n    [nh.b()]: true,\r\n    [nh.bm('resizable')]: resizableAndNotStatic.value,\r\n    [nh.bm('static')]: props.static,\r\n    [nh.bm('resizing')]: state.isResizing,\r\n    [nh.bm('dragging')]: state.isDragging,\r\n    [nh.bm('transform')]: state.useCssTransforms,\r\n    [nh.bm('rtl')]: renderRtl.value,\r\n    [nh.bm('no-touch')]: isAndroid && draggableOrResizableAndNotStatic.value\r\n  }\r\n})\r\nconst resizerClass = computed(() => {\r\n  // return renderRtl.value ? 'vue-resizable-handle vue-rtl-resizable-handle' : 'vue-resizable-handle'\r\n  return [nh.be('resizer'), renderRtl.value && nh.bem('resizer', 'rtl')].filter(Boolean)\r\n})\r\n\r\nwatch(\r\n  () => props.isDraggable,\r\n  value => {\r\n    state.draggable = value\r\n  }\r\n)\r\nwatch(\r\n  () => props.static,\r\n  () => {\r\n    nextTickOnce(tryMakeDraggable)\r\n    nextTickOnce(tryMakeResizable)\r\n  }\r\n)\r\nwatch(\r\n  () => state.draggable,\r\n  () => {\r\n    nextTickOnce(tryMakeDraggable)\r\n  }\r\n)\r\nwatch(\r\n  () => props.isResizable,\r\n  value => {\r\n    state.resizable = value\r\n  }\r\n)\r\nwatch(\r\n  () => props.isBounded,\r\n  value => {\r\n    state.bounded = value\r\n  }\r\n)\r\nwatch(\r\n  () => state.resizable,\r\n  () => {\r\n    nextTickOnce(tryMakeResizable)\r\n  }\r\n)\r\nwatch(\r\n  () => state.rowHeight,\r\n  () => {\r\n    nextTickOnce(createStyle)\r\n    nextTickOnce(emitContainerResized)\r\n  }\r\n)\r\nwatch([() => state.cols, () => state.containerWidth], () => {\r\n  nextTickOnce(tryMakeResizable)\r\n  nextTickOnce(createStyle)\r\n  nextTickOnce(emitContainerResized)\r\n})\r\nwatch([() => props.minH, () => props.maxH, () => props.minW, () => props.maxW], () => {\r\n  nextTickOnce(tryMakeResizable)\r\n})\r\nwatch(renderRtl, () => {\r\n  nextTickOnce(tryMakeResizable)\r\n  nextTickOnce(createStyle)\r\n})\r\nwatch([() => layout.margin, () => layout.margin[0], () => layout.margin[1]], () => {\r\n  const margin = layout.margin\r\n\r\n  if (!margin || (margin[0] === state.margin[0] && margin[1] === state.margin[1])) {\r\n    return\r\n  }\r\n\r\n  state.margin = margin.map(Number)\r\n  nextTickOnce(createStyle)\r\n  nextTickOnce(emitContainerResized)\r\n})\r\n\r\nfunction createStyle() {\r\n  if (props.x + props.w > state.cols) {\r\n    innerX = 0\r\n    innerW = props.w > state.cols ? state.cols : props.w\r\n  } else {\r\n    innerX = props.x\r\n    innerW = props.w\r\n  }\r\n\r\n  const pos = calcPosition(innerX, innerY, innerW, innerH)\r\n\r\n  if (state.isDragging) {\r\n    pos.top = state.dragging.top\r\n    // Add rtl support\r\n    if (renderRtl.value) {\r\n      pos.right = state.dragging.left\r\n    } else {\r\n      pos.left = state.dragging.left\r\n    }\r\n  }\r\n  if (state.isResizing) {\r\n    pos.width = state.resizing.width\r\n    pos.height = state.resizing.height\r\n  }\r\n\r\n  let style\r\n  // CSS Transforms support (default)\r\n  if (state.useCssTransforms) {\r\n    // Add rtl support\r\n    if (renderRtl.value) {\r\n      style = setTransformRtl(pos.top, pos.right!, pos.width, pos.height)\r\n    } else {\r\n      style = setTransform(pos.top, pos.left!, pos.width, pos.height)\r\n    }\r\n  } else {\r\n    // top,left (slow)\r\n    // Add rtl support\r\n    if (renderRtl.value) {\r\n      style = setTopRight(pos.top, pos.right!, pos.width, pos.height)\r\n    } else {\r\n      style = setTopLeft(pos.top, pos.left!, pos.width, pos.height)\r\n    }\r\n  }\r\n\r\n  state.style = style\r\n}\r\n\r\nfunction emitContainerResized() {\r\n  // this.style has width and height with trailing 'px'. The\r\n  // resized event is without them\r\n  const styleProps: Record<string, string> = {}\r\n  for (const prop of ['width', 'height']) {\r\n    const val = state.style[prop]\r\n    const matches = val.match(/^(\\d+)px$/)\r\n    if (!matches) {\r\n      return\r\n    }\r\n    styleProps[prop] = matches[1]\r\n  }\r\n  emit('container-resized', props.i, props.h, props.w, styleProps.height, styleProps.width)\r\n}\r\n\r\nfunction handleResize(event: MouseEvent & { edges: any }) {\r\n  if (props.static) return\r\n\r\n  const type = event.type\r\n  if (\r\n    (type === 'resizestart' && state.isResizing) ||\r\n    (type !== 'resizestart' && !state.isResizing)\r\n  ) {\r\n    return\r\n  }\r\n\r\n  const position = getControlPosition(event)\r\n  // Get the current drag point from the event. This is used as the offset.\r\n  if (isNull(position)) return // not possible but satisfies flow\r\n\r\n  const { x, y } = position\r\n  const newSize = { width: 0, height: 0 }\r\n  let pos\r\n  switch (type) {\r\n    case 'resizestart': {\r\n      tryMakeResizable()\r\n      previousW = innerW\r\n      previousH = innerH\r\n      pos = calcPosition(innerX, innerY, innerW, innerH)\r\n      newSize.width = pos.width\r\n      newSize.height = pos.height\r\n      state.resizing = newSize\r\n      state.isResizing = true\r\n      break\r\n    }\r\n    case 'resizemove': {\r\n      // A vertical resize ignores the horizontal delta\r\n      if (!event.edges.right && !event.edges.left) {\r\n        lastW = x\r\n      }\r\n\r\n      // An horizontal resize ignores the vertical delta\r\n      if (!event.edges.top && !event.edges.bottom) {\r\n        lastH = y\r\n      }\r\n\r\n      const coreEvent = createCoreData(lastW, lastH, x, y)\r\n      if (renderRtl.value) {\r\n        newSize.width = state.resizing.width - coreEvent.deltaX / state.transformScale\r\n      } else {\r\n        newSize.width = state.resizing.width + coreEvent.deltaX / state.transformScale\r\n      }\r\n      newSize.height = state.resizing.height + coreEvent.deltaY / state.transformScale\r\n      state.resizing = newSize\r\n      break\r\n    }\r\n    case 'resizeend': {\r\n      pos = calcPosition(innerX, innerY, innerW, innerH)\r\n      newSize.width = pos.width\r\n      newSize.height = pos.height\r\n\r\n      state.resizing = { width: -1, height: -1 }\r\n      state.isResizing = false\r\n      break\r\n    }\r\n  }\r\n\r\n  // Get new WH\r\n  pos = calcWH(newSize.height, newSize.width)\r\n  if (pos.w < props.minW) {\r\n    pos.w = props.minW\r\n  }\r\n  if (pos.w > props.maxW) {\r\n    pos.w = props.maxW\r\n  }\r\n  if (pos.h < props.minH) {\r\n    pos.h = props.minH\r\n  }\r\n  if (pos.h > props.maxH) {\r\n    pos.h = props.maxH\r\n  }\r\n\r\n  if (pos.h < 1) {\r\n    pos.h = 1\r\n  }\r\n  if (pos.w < 1) {\r\n    pos.w = 1\r\n  }\r\n\r\n  lastW = x\r\n  lastH = y\r\n\r\n  if (innerW !== pos.w || innerH !== pos.h) {\r\n    emit('resize', props.i, pos.h, pos.w, newSize.height, newSize.width)\r\n  }\r\n  if (event.type === 'resizeend' && (previousW !== innerW || previousH !== innerH)) {\r\n    emit('resized', props.i, pos.h, pos.w, newSize.height, newSize.width)\r\n  }\r\n  emitter.emit('resizeEvent', event.type, props.i, innerX, innerY, pos.h, pos.w)\r\n}\r\n\r\nfunction handleDrag(event: MouseEvent) {\r\n  if (props.static || state.isResizing) return\r\n\r\n  const type = event.type\r\n  if ((type === 'dragstart' && state.isDragging) || (type !== 'dragstart' && !state.isDragging)) {\r\n    return\r\n  }\r\n\r\n  const position = getControlPosition(event)\r\n\r\n  // Get the current drag point from the event. This is used as the offset.\r\n  if (isNull(position)) return // not possible but satisfies flow\r\n  const { x, y } = position\r\n  const target = event.target as HTMLElement\r\n\r\n  if (!target.offsetParent) return\r\n\r\n  // let shouldUpdate = false;\r\n  const newPosition = { top: 0, left: 0 }\r\n  switch (type) {\r\n    case 'dragstart': {\r\n      previousX = innerX\r\n      previousY = innerY\r\n\r\n      const parentRect = target.offsetParent.getBoundingClientRect()\r\n      const clientRect = target.getBoundingClientRect()\r\n\r\n      const cLeft = clientRect.left / state.transformScale\r\n      const pLeft = parentRect.left / state.transformScale\r\n      const cRight = clientRect.right / state.transformScale\r\n      const pRight = parentRect.right / state.transformScale\r\n      const cTop = clientRect.top / state.transformScale\r\n      const pTop = parentRect.top / state.transformScale\r\n\r\n      if (renderRtl.value) {\r\n        newPosition.left = (cRight - pRight) * -1\r\n      } else {\r\n        newPosition.left = cLeft - pLeft\r\n      }\r\n      newPosition.top = cTop - pTop\r\n      state.dragging = newPosition\r\n      state.isDragging = true\r\n      break\r\n    }\r\n    case 'dragmove': {\r\n      const coreEvent = createCoreData(lastX, lastY, x, y)\r\n      // Add rtl support\r\n      if (renderRtl.value) {\r\n        newPosition.left = state.dragging.left - coreEvent.deltaX / state.transformScale\r\n      } else {\r\n        newPosition.left = state.dragging.left + coreEvent.deltaX / state.transformScale\r\n      }\r\n      newPosition.top = state.dragging.top + coreEvent.deltaY / state.transformScale\r\n      if (state.bounded) {\r\n        const bottomBoundary =\r\n          target.offsetParent.clientHeight -\r\n          calcGridItemWHPx(props.h, state.rowHeight, state.margin[1])\r\n        newPosition.top = clamp(newPosition.top, 0, bottomBoundary)\r\n        const colWidth = calcColWidth()\r\n        const rightBoundary =\r\n          state.containerWidth - calcGridItemWHPx(props.w, colWidth, state.margin[0])\r\n        newPosition.left = clamp(newPosition.left, 0, rightBoundary)\r\n      }\r\n\r\n      state.dragging = newPosition\r\n      break\r\n    }\r\n    case 'dragend': {\r\n      const parentRect = target.offsetParent.getBoundingClientRect()\r\n      const clientRect = target.getBoundingClientRect()\r\n\r\n      const cLeft = clientRect.left / state.transformScale\r\n      const pLeft = parentRect.left / state.transformScale\r\n      const cRight = clientRect.right / state.transformScale\r\n      const pRight = parentRect.right / state.transformScale\r\n      const cTop = clientRect.top / state.transformScale\r\n      const pTop = parentRect.top / state.transformScale\r\n\r\n      // Add rtl support\r\n      if (renderRtl.value) {\r\n        newPosition.left = (cRight - pRight) * -1\r\n      } else {\r\n        newPosition.left = cLeft - pLeft\r\n      }\r\n      newPosition.top = cTop - pTop\r\n      state.dragging = { top: -1, left: -1 }\r\n      state.isDragging = false\r\n      break\r\n    }\r\n  }\r\n\r\n  // Get new XY\r\n  let pos\r\n  if (renderRtl.value) {\r\n    pos = calcXY(newPosition.top, newPosition.left)\r\n  } else {\r\n    pos = calcXY(newPosition.top, newPosition.left)\r\n  }\r\n\r\n  lastX = x\r\n  lastY = y\r\n\r\n  if (innerX !== pos.x || innerY !== pos.y) {\r\n    emit('move', props.i, pos.x, pos.y)\r\n  }\r\n  if (event.type === 'dragend' && (previousX !== innerX || previousY !== innerY)) {\r\n    emit('moved', props.i, pos.x, pos.y)\r\n  }\r\n  emitter.emit('dragEvent', event.type, props.i, pos.x, pos.y, innerH, innerW)\r\n}\r\n\r\nfunction calcPosition(x: number, y: number, w: number, h: number) {\r\n  const colWidth = calcColWidth()\r\n  // add rtl support\r\n  let out\r\n  if (renderRtl.value) {\r\n    out = {\r\n      right: Math.round(colWidth * x + (x + 1) * state.margin[0]),\r\n      top: Math.round(state.rowHeight * y + (y + 1) * state.margin[1]),\r\n      // 0 * Infinity === NaN, which causes problems with resize constraints;\r\n      // Fix this if it occurs.\r\n      // Note we do it here rather than later because Math.round(Infinity) causes depot\r\n      width: w === Infinity ? w : Math.round(colWidth * w + Math.max(0, w - 1) * state.margin[0]),\r\n      height:\r\n        h === Infinity ? h : Math.round(state.rowHeight * h + Math.max(0, h - 1) * state.margin[1])\r\n    }\r\n  } else {\r\n    out = {\r\n      left: Math.round(colWidth * x + (x + 1) * state.margin[0]),\r\n      top: Math.round(state.rowHeight * y + (y + 1) * state.margin[1]),\r\n      // 0 * Infinity === NaN, which causes problems with resize constraints;\r\n      // Fix this if it occurs.\r\n      // Note we do it here rather than later because Math.round(Infinity) causes depot\r\n      width: w === Infinity ? w : Math.round(colWidth * w + Math.max(0, w - 1) * state.margin[0]),\r\n      height:\r\n        h === Infinity ? h : Math.round(state.rowHeight * h + Math.max(0, h - 1) * state.margin[1])\r\n    }\r\n  }\r\n\r\n  return out\r\n}\r\n\r\n/**\r\n * Translate x and y coordinates from pixels to grid units.\r\n * @param top  Top position (relative to parent) in pixels.\r\n * @param left Left position (relative to parent) in pixels.\r\n * @return x and y in grid units.\r\n */\r\n// TODO check if this function needs change in order to support rtl.\r\nfunction calcXY(top: number, left: number) {\r\n  const colWidth = calcColWidth()\r\n\r\n  // left = colWidth * x + margin * (x + 1)\r\n  // l = cx + m(x+1)\r\n  // l = cx + mx + m\r\n  // l - m = cx + mx\r\n  // l - m = x(c + m)\r\n  // (l - m) / (c + m) = x\r\n  // x = (left - margin) / (coldWidth + margin)\r\n  let x = Math.round((left - state.margin[0]) / (colWidth + state.margin[0]))\r\n  let y = Math.round((top - state.margin[1]) / (state.rowHeight + state.margin[1]))\r\n\r\n  // Capping\r\n  x = Math.max(Math.min(x, state.cols - innerW), 0)\r\n  y = Math.max(Math.min(y, state.maxRows - innerH), 0)\r\n\r\n  return { x, y }\r\n}\r\n\r\nfunction calcColWidth() {\r\n  return (state.containerWidth - state.margin[0] * (state.cols + 1)) / state.cols\r\n}\r\n\r\nfunction calcGridItemWHPx(gridUnits: number, colOrRowSize: number, marginPx: number) {\r\n  // 0 * Infinity === NaN, which causes problems with resize constraints\r\n  if (!Number.isFinite(gridUnits)) return gridUnits\r\n  return Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx)\r\n}\r\n\r\nfunction clamp(num: number, lowerBound: number, upperBound: number) {\r\n  return Math.max(Math.min(num, upperBound), lowerBound)\r\n}\r\n\r\n/**\r\n * Given a height and width in pixel values, calculate grid units.\r\n * @param height Height in pixels.\r\n * @param width  Width in pixels.\r\n * @param autoSizeFlag  function autoSize identifier.\r\n * @return w, h as grid units.\r\n */\r\nfunction calcWH(height: number, width: number, autoSizeFlag = false) {\r\n  const colWidth = calcColWidth()\r\n\r\n  // width = colWidth * w - (margin * (w - 1))\r\n  // ...\r\n  // w = (width + margin) / (colWidth + margin)\r\n  let w = Math.round((width + state.margin[0]) / (colWidth + state.margin[0]))\r\n  let h = 0\r\n  if (!autoSizeFlag) {\r\n    h = Math.round((height + state.margin[1]) / (state.rowHeight + state.margin[1]))\r\n  } else {\r\n    h = Math.ceil((height + state.margin[1]) / (state.rowHeight + state.margin[1]))\r\n  }\r\n\r\n  // Capping\r\n  w = Math.max(Math.min(w, state.cols - innerX), 0)\r\n  h = Math.max(Math.min(h, state.maxRows - innerY), 0)\r\n  return { w, h }\r\n}\r\n\r\nfunction updateWidth(width: number, colNum?: number) {\r\n  state.containerWidth = width\r\n  if (colNum !== undefined && colNum !== null) {\r\n    state.cols = colNum\r\n  }\r\n}\r\n\r\nfunction compact() {\r\n  createStyle()\r\n}\r\n\r\nfunction tryInteract() {\r\n  if (!interactObj.value && wrapper.value) {\r\n    interactObj.value = interact(wrapper.value)\r\n    if (!state.useStyleCursor) {\r\n      interactObj.value.styleCursor(false)\r\n    }\r\n  }\r\n}\r\n\r\nconst throttleDrag = throttle(handleDrag)\r\n\r\nfunction tryMakeDraggable() {\r\n  tryInteract()\r\n\r\n  if (!interactObj.value) return\r\n\r\n  if (state.draggable && !props.static) {\r\n    const opts = {\r\n      ignoreFrom: props.dragIgnoreFrom,\r\n      allowFrom: props.dragAllowFrom,\r\n      ...props.dragOption\r\n    }\r\n    interactObj.value.draggable(opts)\r\n\r\n    if (!dragEventSet) {\r\n      dragEventSet = true\r\n      interactObj.value.on('dragstart dragmove dragend', event => {\r\n        event.type === 'dragmove' ? throttleDrag(event) : handleDrag(event)\r\n      })\r\n    }\r\n  } else {\r\n    interactObj.value.draggable({ enabled: false })\r\n  }\r\n}\r\n\r\nconst throttleResize = throttle(handleResize)\r\n\r\nfunction tryMakeResizable() {\r\n  tryInteract()\r\n\r\n  if (!interactObj.value) return\r\n\r\n  if (state.resizable && !props.static) {\r\n    const maximum = calcPosition(0, 0, props.maxW, props.maxH)\r\n    const minimum = calcPosition(0, 0, props.minW, props.minH)\r\n\r\n    const opts: Record<string, any> = {\r\n      edges: {\r\n        left: false,\r\n        right: `.${resizerClass.value[0]}`,\r\n        bottom: `.${resizerClass.value[0]}`,\r\n        top: false\r\n      },\r\n      ignoreFrom: props.resizeIgnoreFrom,\r\n      restrictSize: {\r\n        min: {\r\n          height: minimum.height * state.transformScale,\r\n          width: minimum.width * state.transformScale\r\n        },\r\n        max: {\r\n          height: maximum.height * state.transformScale,\r\n          width: maximum.width * state.transformScale\r\n        }\r\n      },\r\n      ...props.resizeOption\r\n    }\r\n\r\n    if (props.preserveAspectRatio) {\r\n      opts.modifiers = [interact.modifiers.aspectRatio({ ratio: 'preserve' })]\r\n    }\r\n\r\n    interactObj.value.resizable(opts)\r\n    if (!resizeEventSet) {\r\n      resizeEventSet = true\r\n      interactObj.value.on('resizestart resizemove resizeend', event => {\r\n        event.type === 'resizemove' ? throttleResize(event) : handleResize(event)\r\n      })\r\n    }\r\n  } else {\r\n    interactObj.value.resizable({ enabled: false })\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <section ref=\"wrapper\" :class=\"className\" :style=\"state.style\">\r\n    <slot></slot>\r\n    <span v-if=\"resizableAndNotStatic\" :class=\"resizerClass\"></span>\r\n  </section>\r\n</template>\r\n"],"names":["props","__props","emit","__emit","layout","inject","LAYOUT_KEY","emitter","EMITTER_KEY","interactObj","ref","state","reactive","dragEventSet","resizeEventSet","lastX","lastY","lastW","lastH","previousW","previousH","previousX","previousY","innerX","innerY","innerW","innerH","wrapper","instance","toRef","calcXY","updateWidthHandler","width","updateWidth","compactHandler","compact","setDraggableHandler","isDraggable","isNull","setResizableHandler","isResizable","setBoundedHandler","isBounded","setTransformScaleHandler","transformScale","setRowHeightHandler","rowHeight","setMaxRowsHandler","maxRows","directionchangeHandler","getDocumentDir","setColNum","colNum","onBeforeMount","onMounted","getColsFromBreakpoint","watchEffect","nextTickOnce","createStyle","onBeforeUnmount","__expose","isAndroid","resizableAndNotStatic","computed","renderRtl","draggableOrResizableAndNotStatic","nh","useNameHelper","className","resizerClass","watch","value","tryMakeDraggable","tryMakeResizable","emitContainerResized","margin","pos","calcPosition","style","setTransformRtl","setTransform","setTopRight","setTopLeft","styleProps","prop","matches","handleResize","event","type","position","getControlPosition","x","y","newSize","coreEvent","createCoreData","calcWH","handleDrag","target","newPosition","parentRect","clientRect","cLeft","pLeft","cRight","pRight","cTop","pTop","bottomBoundary","calcGridItemWHPx","clamp","colWidth","calcColWidth","rightBoundary","w","h","out","top","left","gridUnits","colOrRowSize","marginPx","num","lowerBound","upperBound","height","autoSizeFlag","tryInteract","interact","throttleDrag","throttle","opts","throttleResize","maximum","minimum"],"mappings":"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"}